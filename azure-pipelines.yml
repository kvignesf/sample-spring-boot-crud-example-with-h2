trigger:
  - main

pool:
  name: azurevm

steps:

# Step 1: Secret Scan using Gitleaks
- script: |
    echo "🔐 Installing Gitleaks..."
    curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz -o gitleaks.tar.gz
    tar -xzf gitleaks.tar.gz
    sudo mv gitleaks /usr/local/bin/gitleaks
    gitleaks version

    echo "🔍 Running Gitleaks secret scan..."
    mkdir -p $(Build.ArtifactStagingDirectory)
    gitleaks detect --source=. --exit-code 0 --report-format sarif --report-path=$(Build.ArtifactStagingDirectory)/gitleaks-report.sarif

    echo "📦 Gitleaks scan finished. Report saved to artifact staging."
  displayName: '🔍 Gitleaks Secret Scan'
  continueOnError: true
  failOnStderr: false

# Step 2: Trivy scan (ignore known CVEs listed in .trivyignore)
- script: |
    echo "🛠 Installing Trivy..."
    sudo apt-get update
    sudo apt-get install -y wget gnupg lsb-release

    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /etc/apt/keyrings/trivy.gpg > /dev/null
    echo "deb [signed-by=/etc/apt/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
    sudo apt-get update && sudo apt-get install -y trivy

    echo "📄 Creating .trivyignore (if not present)..."
    echo -e "CVE-2024-38819\nCVE-2022-25857" > .trivyignore

    echo "🛡 Running Trivy vulnerability scan with ignore file..."
    trivy fs . --exit-code 1 --severity HIGH,CRITICAL --format table --ignorefile .trivyignore
  displayName: '🛡 Trivy Scan for Vulnerabilities'
  continueOnError: false
  failOnStderr: true

# Step 3: Build the app using Maven
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    mavenAuthenticateFeed: true
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
  displayName: '⚙️ Build with Maven'

# Step 4: Copy files to artifact staging
- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: '📦 Copy files to artifact staging'

# Step 5: Publish build artifact
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Shopping'
    publishLocation: 'Container'
  displayName: '🚀 Publish App Artifacts'

# Step 6: Publish Gitleaks report separately
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/gitleaks-report.sarif'
    ArtifactName: 'ScanReports'
    publishLocation: 'Container'
  displayName: '🧾 Publish Gitleaks Report Artifact'
